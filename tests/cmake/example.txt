cmake_minimum_required(VERSION 3.3)
project(myproject)

# compiler flags
add_definitions("-std=c++17" "-O2" "-pipe" "-fPIC" "-fno-plt" "-fstack-protector-strong" "-Wall" "-Wshadow" "-Wpedantic" "-Wno-parentheses" "-Wfatal-errors" "-Wvla")

# no warnings
add_definitions("-w")

# glob sources (both .cpp and .h)
file(GLOB SOURCES main.cpp ${PROJECT_SOURCE_DIR}/common/*.cpp ${PROJECT_SOURCE_DIR}/include/*.h)

# for xyssl
#add_compile_definitions(USE_RIJNDAEL_CODE)

# the main executable
add_executable(main ${SOURCES})

# include directories
target_include_directories(main PRIVATE ${PROJECT_SOURCE_DIR}/include)

# libxml2
find_package(PkgConfig)
pkg_check_modules(XML2 REQUIRED libxml-2.0)
target_link_libraries(main ${XML2_LIBRARIES})
target_include_directories(main PUBLIC ${XML2_INCLUDE_DIRS})
target_compile_options(main PUBLIC ${XML2_CFLAGS_OTHER})

# use ccache, if found
find_program(CCACHE_FOUND ccache)
if(CCACHE_FOUND)
  set(CMAKE_CXX_COMPILER_LAUNCHER "ccache")
endif(CCACHE_FOUND)
